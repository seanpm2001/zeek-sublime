%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Zeek
file_extensions:
  - bro
  - zeek
scope: source.zeek
contexts:
  main:
    - match: (##!|##<|##|#)
      captures:
        1: punctuation.definition.comment.zeek
      push:
        - meta_scope: comment.line.zeek
        - match: $
          pop: true
    - match: (\")
      captures:
        1: punctuation.definition.string.begin.zeek
      push:
        - meta_scope: string.quoted.double.zeek
        - match: (\")
          captures:
            1: punctuation.definition.string.end.zeek
          pop: true
        - match: \\.
          scope: constant.character.escape.zeek
        - match: '%-?[0-9]*(\.[0-9]+)?[DTdxsefg]'
          scope: constant.other.placeholder.zeek
    - match: (/)(?=.*/)
      captures:
        1: punctuation.definition.string.begin.zeek
      push:
        - meta_scope: string.regexp.zeek
        - match: (/)
          captures:
            1: punctuation.definition.string.end.zeek
          pop: true
        - match: \\.
          scope: constant.character.escape.zeek
    - match: (@(load-plugin|load-sigs|load|unload)).*$
      scope: meta.preprocessor.zeek
      captures:
        1: keyword.other.zeek
    - match: (@(DEBUG|DIR|FILENAME|deprecated|if|ifdef|ifndef|else|endif))
      scope: meta.preprocessor.zeek
      captures:
        1: keyword.other.zeek
    - match: (@prefixes)\s*(\+?=).*$
      scope: meta.preprocessor.zeek
      captures:
        1: keyword.other.zeek
        2: keyword.operator.zeek
    - match: \&\b(redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|error_handler|type_column|deprecated|on_change|backend|broker_store|broker_allow_complex_type|is_assigned|is_used)\b
      scope: storage.modifier.attribute.zeek
    - match: \b(T|F)\b
      scope: constant.language.zeek
    - match: '\b\d{1,5}/(udp|tcp|icmp|unknown)\b'
      scope: constant.numeric.port.zeek
    - match: '\b(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\b'
      comment: IPv4 address
      scope: constant.numeric.addr.zeek
    - match: '\[([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?((25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2}))?\]'
      comment: IPv6 address
      scope: constant.numeric.addr.zeek
    - match: '(((?:(\d*\.\d*)([eE][+-]?\d+)?)|(?:(\d*)([eE][+-]?\d+))|(?:(\d*\.\d*)))|\d+)\s*(day|hr|min|msec|usec|sec)s?'
      scope: constant.numeric.float.decimal.interval.zeek
    - match: '((?:(\d*\.\d*)([eE][+-]?\d+)?)|(?:(\d*)([eE][+-]?\d+))|(?:(\d*\.\d*)))'
      scope: constant.numeric.float.decimal.zeek
    - match: '\b(([A-Za-z0-9][A-Za-z0-9\-]*)(?:\.([A-Za-z0-9][A-Za-z0-9\-]*))+)\b'
      scope: constant.numeric.hostname.zeek
    - match: '\b(0x[0-9a-fA-F]+)\b'
      scope: constant.numeric.integer.hexadecimal.zeek
    - match: \b(\d+)\b
      scope: constant.numeric.integer.decimal.zeek
    - match: (==)|(!=)|(<=)|(<)|(>=)|(>)
      scope: keyword.operator.zeek
    - match: (&&)|(||)|(!)
      scope: keyword.operator.zeek
    - match: (=)|(\+=)|(-=)
      scope: keyword.operator.zeek
    - match: (\+\+)|(\+)|(--)|(-)|(\*)|(/)|(%)
      scope: keyword.operator.zeek
    - match: (&)|(\|)|(\^)|(~)
      scope: keyword.operator.zeek
    - match: \b(in|as|is)\b
      scope: keyword.operator.zeek
    - match: ;
      scope: punctuation.terminator.zeek
    - match: \??\$
      scope: punctuation.accessor.zeek
    - match: "::"
      scope: punctuation.accessor.zeek
    - match: (\?)
      scope: keyword.operator.zeek
    - match: (?<=\S)(:)
      scope: punctuation.separator.zeek
    - match: (,)
      scope: punctuation.separator.zeek
    - match: (:)
      scope: keyword.operator.zeek
    - match: '(module)\s+(([A-Za-z_][A-Za-z_0-9]*)(?:::([A-Za-z_][A-Za-z_0-9]*))*)'
      scope: meta.namespace.zeek
      captures:
        1: keyword.other.zeek
        2: entity.name.namespace.zeek
    - match: \b(export)\b
      scope: keyword.other.zeek
    - match: \b(if|else)\b
      scope: keyword.control.conditional.zeek
    - match: \b(for|while)\b
      scope: keyword.control.zeek
    - match: \b(return|break|next|continue|fallthrough)\b
      scope: keyword.control.zeek
    - match: \b(switch|default|case)\b
      scope: keyword.control.zeek
    - match: \b(add|delete|copy)\b
      scope: keyword.other.zeek
    - match: \b(print)\b
      scope: keyword.other.zeek
    - match: \b(when|timeout|schedule)\b
      scope: keyword.control.zeek
    - match: '\b(type)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\s*(:)\s*\b(record)\b'
      scope: meta.struct.record.zeek
      captures:
        1: keyword.other.zeek
        2: entity.name.struct.record.zeek
        3: punctuation.separator.zeek
        4: storage.type.struct.record.zeek keyword.declaration.struct.record.zeek
    - match: '\b(type)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\s*(:)\s*\b(enum)\b'
      scope: meta.enum.zeek
      captures:
        1: keyword.other.zeek
        2: entity.name.enum.zeek
        3: punctuation.separator.zeek
        4: storage.type.enum.zeek keyword.declaration.enum.zeek
    - match: '\b(type)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\s*(:)'
      scope: meta.type.zeek
      captures:
        1: keyword.other.zeek
        2: entity.name.type.zeek
        3: punctuation.separator.zeek
    - match: '\b(redef)\s+(record)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\b'
      scope: meta.struct.record.zeek
      captures:
        1: keyword.other.zeek
        2: storage.type.struct.record.zeek keyword.declaration.struct.record.zeek
        3: entity.name.struct.record.zeek
    - match: '\b(redef)\s+(enum)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\b'
      scope: meta.enum.zeek
      captures:
        1: keyword.other.zeek
        2: storage.type.enum.zeek keyword.declaration.enum.zeek
        3: entity.name.enum.zeek
    - match: '\b(event)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()'
      captures:
        1: storage.type.zeek
        2: entity.name.function.event.zeek
    - match: '\b(hook)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()'
      captures:
        1: storage.type.zeek
        2: entity.name.function.hook.zeek
    - match: '\b(function)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()'
      captures:
        1: storage.type.zeek
        2: entity.name.function.zeek
    - match: \b(redef)\b
      scope: keyword.other.zeek
    - match: \b(any)\b
      scope: storage.type.zeek
    - match: \b(enum|record|set|table|vector)\b
      scope: storage.type.zeek
    - match: '\b(opaque)\s+(of)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\b'
      captures:
        1: storage.type.zeek
        2: keyword.operator.zeek
        3: storage.type.zeek
    - match: \b(of)\b
      scope: keyword.operator.zeek
    - match: \b(addr|bool|count|double|file|int|interval|pattern|port|string|subnet|time)\b
      scope: storage.type.zeek
    - match: \b(function|hook|event)\b
      scope: storage.type.zeek
    - match: \b(global|local|const|option)\b
      scope: storage.modifier.zeek
    - match: '\b((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()'
      scope: entity.name.function.call.zeek
    - match: '\{'
      scope: punctuation.section.block.begin.zeek
    - match: '\}'
      scope: punctuation.section.block.end.zeek
    - match: '\['
      scope: punctuation.section.brackets.begin.zeek
    - match: '\]'
      scope: punctuation.section.brackets.end.zeek
    - match: \(
      scope: punctuation.section.parens.begin.zeek
    - match: \)
      scope: punctuation.section.parens.end.zeek
