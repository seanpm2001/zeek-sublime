<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>bro</string>
		<string>zeek</string>
	</array>
	<key>name</key>
	<string>Zeek</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(##!|##&lt;|##|#)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.zeek</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.zeek</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\")</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.zeek</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.zeek</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.zeek</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.zeek</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%-?[0-9]*(\.[0-9]+)?[DTdxsefg]</string>
					<key>name</key>
					<string>constant.other.placeholder.zeek</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(/)(?=.*/)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.zeek</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.zeek</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.zeek</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.zeek</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(@(load-plugin|load-sigs|load|unload)).*$</string>
			<key>name</key>
			<string>meta.preprocessor.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(@(DEBUG|DIR|FILENAME|deprecated|if|ifdef|ifndef|else|endif))</string>
			<key>name</key>
			<string>meta.preprocessor.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(@prefixes)\s*(\+?=).*$</string>
			<key>name</key>
			<string>meta.preprocessor.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\&amp;\b(redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|error_handler|type_column|deprecated|on_change|backend|broker_store|broker_allow_complex_type|is_assigned)\b</string>
			<key>name</key>
			<string>storage.modifier.attribute.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(T|F)\b</string>
			<key>name</key>
			<string>constant.language.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\d{1,5}/(udp|tcp|icmp|unknown)\b</string>
			<key>name</key>
			<string>constant.numeric.port.zeek</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>IPv4 address</string>
			<key>match</key>
			<string>\b(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\b</string>
			<key>name</key>
			<string>constant.numeric.addr.zeek</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>IPv6 address</string>
			<key>match</key>
			<string>\[([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?((25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2}))?\]</string>
			<key>name</key>
			<string>constant.numeric.addr.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(((?:(\d*\.\d*)([eE][+-]?\d+)?)|(?:(\d*)([eE][+-]?\d+))|(?:(\d*\.\d*)))|\d+)\s*(day|hr|min|msec|usec|sec)s?</string>
			<key>name</key>
			<string>constant.numeric.float.decimal.interval.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>((?:(\d*\.\d*)([eE][+-]?\d+)?)|(?:(\d*)([eE][+-]?\d+))|(?:(\d*\.\d*)))</string>
			<key>name</key>
			<string>constant.numeric.float.decimal.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(([A-Za-z0-9][A-Za-z0-9\-]*)(?:\.([A-Za-z0-9][A-Za-z0-9\-]*))+)\b</string>
			<key>name</key>
			<string>constant.numeric.hostname.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(0x[0-9a-fA-F]+)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\d+)\b</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(==)|(!=)|(&lt;=)|(&lt;)|(&gt;=)|(&gt;)</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(&amp;&amp;)|(||)|(!)</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(=)|(\+=)|(-=)</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\+\+)|(\+)|(--)|(-)|(\*)|(/)|(%)</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(&amp;)|(\|)|(\^)|(~)</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(in|as|is)\b</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>punctuation.terminator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\??\$</string>
			<key>name</key>
			<string>punctuation.accessor.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>::</string>
			<key>name</key>
			<string>punctuation.accessor.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\?)</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=\S)(:)</string>
			<key>name</key>
			<string>punctuation.separator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(,)</string>
			<key>name</key>
			<string>punctuation.separator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(:)</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.namespace.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(module)\s+(([A-Za-z_][A-Za-z_0-9]*)(?:::([A-Za-z_][A-Za-z_0-9]*))*)</string>
			<key>name</key>
			<string>meta.namespace.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(export)\b</string>
			<key>name</key>
			<string>keyword.other.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else)\b</string>
			<key>name</key>
			<string>keyword.control.conditional.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(for|while)\b</string>
			<key>name</key>
			<string>keyword.control.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(return|break|next|continue|fallthrough)\b</string>
			<key>name</key>
			<string>keyword.control.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(switch|default|case)\b</string>
			<key>name</key>
			<string>keyword.control.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(add|delete|copy)\b</string>
			<key>name</key>
			<string>keyword.other.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(print)\b</string>
			<key>name</key>
			<string>keyword.other.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(when|timeout|schedule)\b</string>
			<key>name</key>
			<string>keyword.control.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.struct.record.zeek</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.zeek</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.struct.record.zeek keyword.declaration.struct.record.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(type)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\s*(:)\s*\b(record)\b</string>
			<key>name</key>
			<string>meta.struct.record.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.enum.zeek</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.zeek</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.enum.zeek keyword.declaration.enum.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(type)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\s*(:)\s*\b(enum)\b</string>
			<key>name</key>
			<string>meta.enum.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.zeek</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(type)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\s*(:)</string>
			<key>name</key>
			<string>meta.type.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.struct.record.zeek keyword.declaration.struct.record.zeek</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.struct.record.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(redef)\s+(record)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\b</string>
			<key>name</key>
			<string>meta.struct.record.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.enum.zeek keyword.declaration.enum.zeek</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.enum.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(redef)\s+(enum)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\b</string>
			<key>name</key>
			<string>meta.enum.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.event.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(event)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.hook.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(hook)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(function)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(redef)\b</string>
			<key>name</key>
			<string>keyword.other.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(any)\b</string>
			<key>name</key>
			<string>storage.type.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(enum|record|set|table|vector)\b</string>
			<key>name</key>
			<string>storage.type.zeek</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.zeek</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.zeek</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.zeek</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(opaque)\s+(of)\s+((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)\b</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(of)\b</string>
			<key>name</key>
			<string>keyword.operator.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(addr|bool|count|double|file|int|interval|pattern|port|string|subnet|time)\b</string>
			<key>name</key>
			<string>storage.type.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(function|hook|event)\b</string>
			<key>name</key>
			<string>storage.type.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(global|local|const|option)\b</string>
			<key>name</key>
			<string>storage.modifier.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((?:[A-Za-z_][A-Za-z_0-9]*)(?:::(?:[A-Za-z_][A-Za-z_0-9]*))*)(?=\s*\()</string>
			<key>name</key>
			<string>entity.name.function.call.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{</string>
			<key>name</key>
			<string>punctuation.section.block.begin.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\}</string>
			<key>name</key>
			<string>punctuation.section.block.end.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[</string>
			<key>name</key>
			<string>punctuation.section.brackets.begin.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\]</string>
			<key>name</key>
			<string>punctuation.section.brackets.end.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(</string>
			<key>name</key>
			<string>punctuation.section.parens.begin.zeek</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\)</string>
			<key>name</key>
			<string>punctuation.section.parens.end.zeek</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.zeek</string>
	<key>uuid</key>
	<string>d27211b1-e07c-4c8d-9d7e-13daa805693c</string>
</dict>
</plist>
